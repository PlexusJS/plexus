name: NPM Package Publish - Canary
# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build:
    uses: PlexusJS/plexus/.github/workflows/build.yml@canary
      # - uses: actions/setup-node@v3
      #   with:
      #     node-version: 16

      # - name: Cache node modules
      #   id: cache-yarn
      #   uses: actions/cache@v3
      #   env:
      #     cache-name: cache-node-module
      #   with:
      #     path: |
      #       ~/.cache/yarn
      #       node_modules

      #     key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-build-${{ env.cache-name }}-
      #       ${{ runner.os }}-build-
      #       ${{ runner.os }}-

      # - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
      #   name: List the state of node modules
      #   continue-on-error: true
      #   run: yarn list

      # - name: Check node_modules
      #   uses: andstor/file-existence-action@v1
      #   with:
      #     files: 'node_modules'

      # # If the cache is not hit (we don't have a cache for this set of deps), then we need to install the dependencies
      # # We're assuming the build and formatting process was already done
      # - if: steps.check_files.outputs.files_exists != 'true'
      #   name: Install Dependencies
      #   env:
      #     NOYARNPOSTINSTALL: 1
      #   run: yarn install

      # - name: Yarn Build
      #   run: yarn build
      # - name: Format
      #   run: yarn format --all

  publish-gpr:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://npm.pkg.github.com/
      - name: Cache node modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-module
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: ls -la
      - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
        name: Install Dependencies
        env:
          NOYARNPOSTINSTALL: 1
        run: yarn install

      - run: yarn publish-canary
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_ACCESS_TOKEN}}
